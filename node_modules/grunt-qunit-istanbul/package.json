{
  "name": "grunt-qunit-istanbul",
  "description": "Run QUnit unit tests in a headless PhantomJS instance and create coverage reports with istanbul.",
  "version": "0.4.5",
  "homepage": "https://github.com/asciidisco/grunt-qunit-istanbul",
  "author": {
    "name": "Grunt Team",
    "url": "http://gruntjs.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/asciidisco/grunt-qunit-istanbul.git"
  },
  "bugs": {
    "url": "https://github.com/asciidisco/grunt-qunit-istanbul/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/asciidisco/grunt-qunit-istanbul/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "grunt-lib-phantomjs-istanbul": "~0.6.0",
    "istanbul": "~0.2.7",
    "rimraf": "~2.2.6"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-connect": "~0.3.0",
    "grunt-contrib-internal": "~0.4.5",
    "grunt": "~0.4.1",
    "difflet": "~0.2.3"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin"
  ],
  "files": [
    "tasks",
    "LICENSE-MIT",
    "phantomjs"
  ],
  "readme": "# grunt-qunit-istanbul\n\n> Run QUnit unit tests in a headless PhantomJS instance with code coverage\n> analysis provided by istanbul.\n\n## IMPORTANT\n\nThis is a fork of the grunt-contrib-qunit repo, adding the ability to generate\n[istanbul](http://gotwarlost.github.com/istanbul/) test coverage reports.\nUnfortunately this cannot be handled as a seperate plugin, because it needs to\nhook into the grunt-contrib-qunit and grunt-lib-phantomjs structure.\n\nThis plugin should work as a drop-in replacement for your current `qunit`\ntask. For any further configuration, please check out the\n[original plugin's repo](https://github.com/gruntjs/grunt-contrib-qunit).\n\n## Getting Started\n\nThis plugin requires Grunt `~0.4.0`.\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out\nthe [Getting Started](http://gruntjs.com/getting-started) guide, as it explains\nhow to create a [Gruntfile](http://gruntjs.com/sample-gruntfile), as well as\nhow to install and use Grunt plugins. Once you're familiar with that process,\nyou can install this plugin with this command:\n\n```shell\nnpm install grunt-qunit-istanbul --save-dev\n```\n\nOnce the plugin has been installed, it can be enabled inside your Gruntfile\nwith this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-qunit-istanbul');\n```\n\n## QUnit task\n\n_Run this task with the `grunt qunit` command._\n\nTask targets, files and options may be specified according to the grunt\n[Configuring tasks](http://gruntjs.com/configuring-tasks) guide.\n\nWhen installed by npm, this plugin will automatically download and install\n[PhantomJS][] locally via the [grunt-lib-phantomjs-istanbul][] library.\n\n[PhantomJS]: http://www.phantomjs.org/\n[grunt-lib-phantomjs-istanbul]: https://github.com/asciidisco/grunt-lib-phantomjs-istanbul\n\nAlso note that running grunt with the `--debug` flag will output a lot of\nPhantomJS-specific debugging information. This can be very helpful in seeing\nwhat actual URIs are being requested and received by PhantomJS.\n\n#### OS Dependencies\n\nThis plugin uses PhantomJS to run tests. PhantomJS requires the following\ndependencies:\n\n**On Ubuntu/Debian**\n\n`apt-get install libfontconfig1 fontconfig libfontconfig1-dev libfreetype6-dev`\n\n**On CentOS**\n\n`yum install fontconfig freetype`\n\n### Options (Coverage object)\n\n#### src\n\n* Type: `array`\n* Default: `[]`\n\nThe js files you would like to end up in the coverage report.\n\n#### instrumentedFiles\n\n* Type: `string`\n\nA temporary folder (that will be automatically generated and deleted after the\ntest suite finishes) containing the instrumented source code.\n\n#### htmlReport\n\n* Type: `string` [optional]\n\nA folder where the HTML reports should be stored.\n\n#### coberturaReport\n\n* Type: `string` [optional]\n\nA folder where the Cobertura reports should be stored.\n\n#### lcovReport\n\n* Type: `string` [optional]\n\nA folder where the LCOV reports should be stored.\n\n#### cloverReport\n\n* Type: `string` [optional]\n\nA folder where the Clover reports should be stored.\n\n#### baseUrl\n\n* Type: `string` [optional]\n* Default: `.`\n\nIf you're running your qunit tests with the help of a webserver, you have to\npoint the coverage inspector to the physical path that is the base url of the\nqunit page you're running.\n\n#### linesThresholdPct\n\n* Type: `number` [optional]\n\nLines coverage percentage threshold to evaluate when running the build. If the\nactual coverage percentage is less than this value, the build will fail.\n\n#### statementsThresholdPct\n\n* Type: `number` [optional]\n\nStatements coverage percentage threshold to evaluate when running the build. If\nthe actual coverage percentage is less than this value, the build will fail.\n\n#### functionsThresholdPct\n\n* Type: `number` [optional]\n\nFunctions coverage percentage threshold to evaluate when running the build. If\nthe actual coverage percentage is less than this value, the build will fail.\n\n#### branchesThresholdPct\n\n* Type: `number` [optional]\n\nBranches coverage percentage threshold to evaluate when running the build. If\nthe actual coverage percentage is less than this value, the build will fail.\n\n#### disposeCollector\n\n* Type: `boolean` [optional]\n* Default: `false`\n\nWhether or not to dispose the previous collector and create a new instance of\nit, discarding the info of previously instrumented files. This is useful if\nusing `grunt-qunit-istanbul` as a\n[multi task](http://gruntjs.com/api/inside-tasks#inside-multi-tasks) with\nseparate targets generating separate coverage reports. If set to `true` for a\nparticular target, the plugin will generate a coverage report only for the\nfiles specified in the `coverage.src` property, even when files used by the\ncurrent target were also instrumented by a previous target. See the related\n[bug report](https://github.com/asciidisco/grunt-qunit-istanbul/issues/10).\n\n### Usage\n\n```js\nqunit: {\n  options: {\n    '--web-security': 'no',\n    coverage: {\n      disposeCollector: true,\n      src: ['src/js/**/*.js'],\n      instrumentedFiles: 'temp/',\n      htmlReport: 'report/coverage',\n      coberturaReport: 'report/',\n      linesThresholdPct: 85\n    }\n  },\n  all: ['test/**/*.html']\n}\n```\n\n---\n\nOriginal Task by [\"Cowboy\" Ben Alman](http://benalman.com/)\n\nModified by [asciidisco](http://twitter.com/asciidisco)\n",
  "readmeFilename": "README.md",
  "_id": "grunt-qunit-istanbul@0.4.5",
  "_from": "grunt-qunit-istanbul@*"
}
